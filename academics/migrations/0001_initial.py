# Generated by Django 5.2 on 2025-05-25 05:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Select the date for which attendance is being recorded')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], help_text='Select the attendance status for this student', max_length=10)),
                ('remarks', models.TextField(blank=True, help_text='Any additional remarks about the attendance (e.g., reason for absence)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Attendance Record',
                'verbose_name_plural': 'Attendance Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the full name of the department (e.g., Department of Computer Science).', max_length=100)),
                ('slug', models.SlugField(help_text='A unique, web-friendly identifier for the department (e.g., computer-science). Automatically generated if left blank.', max_length=100, unique=True)),
                ('code', models.CharField(help_text='Enter the short code or abbreviation for the department (e.g., CS).', max_length=10)),
                ('image', models.ImageField(blank=True, help_text='Upload an image to represent the department.', null=True, upload_to='departments/')),
                ('introduction', models.TextField(blank=True, help_text='Provide a brief introductory text for the department page.', null=True)),
                ('details', models.TextField(blank=True, help_text='Provide detailed information about the department, its facilities, etc.', null=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the full name of the academic faculty (e.g., Faculty of Engineering).', max_length=100)),
                ('slug', models.SlugField(help_text='A unique, web-friendly identifier for the faculty (e.g., faculty-of-engineering). Automatically generated if left blank.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Provide a brief description of the faculty.')),
            ],
            options={
                'verbose_name': 'Faculty',
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(help_text="Enter the grade symbol (e.g., 'A+', 'A', 'B+', 'B', etc.)", max_length=2, unique=True)),
                ('min_marks', models.DecimalField(decimal_places=2, help_text='Enter the minimum marks required for this grade (e.g., 85.00 for A)', max_digits=5)),
                ('max_marks', models.DecimalField(decimal_places=2, help_text='Enter the maximum marks possible for this grade (e.g., 100.00 for A+)', max_digits=5)),
                ('grade_points', models.DecimalField(decimal_places=1, help_text='Enter the grade points for this grade (e.g., 4.0 for A+)', max_digits=3)),
                ('description', models.CharField(help_text="Enter a description of this grade (e.g., 'Excellent', 'Very Good', etc.)", max_length=50)),
                ('is_passing', models.BooleanField(default=True, help_text='Check this if this grade is considered passing')),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grading System',
                'ordering': ['-grade_points'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the full name of the academic program (e.g., Bachelor of Science in Computer Science).', max_length=100)),
                ('degree_type', models.CharField(help_text='e.g., PhD, MPhil, BS. Enter the type of degree awarded by this program.', max_length=10)),
                ('duration_years', models.IntegerField(help_text='Enter the number of years it typically takes to complete the program.')),
                ('total_semesters', models.PositiveIntegerField(default=8, help_text='Enter the total number of semesters in the program.')),
                ('start_year', models.PositiveIntegerField(help_text='Enter the year when this program started')),
                ('end_year', models.PositiveIntegerField(blank=True, help_text='Enter the year when this program ended (leave blank if still active)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Check this if this program is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_number', models.PositiveIntegerField(help_text='Enter the semester number (1-8)')),
                ('semester_type', models.CharField(choices=[('fall', 'Fall'), ('spring', 'Spring')], help_text='Select whether this is a Fall or Spring semester', max_length=10)),
                ('start_date', models.DateField(help_text='Select the starting date of this semester')),
                ('end_date', models.DateField(help_text='Select the ending date of this semester')),
                ('registration_start', models.DateField(help_text='Select the start date for course registration')),
                ('registration_end', models.DateField(help_text='Select the end date for course registration')),
                ('classes_start', models.DateField(help_text='Select the date when classes begin')),
                ('mid_term_start', models.DateField(help_text='Select the start date of mid-term examinations')),
                ('mid_term_end', models.DateField(help_text='Select the end date of mid-term examinations')),
                ('final_term_start', models.DateField(help_text='Select the start date of final examinations')),
                ('final_term_end', models.DateField(help_text='Select the end date of final examinations')),
                ('is_active', models.BooleanField(default=False, help_text='Check this if this is the current semester. Only one semester can be active at a time.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
                'ordering': ['academic_session', 'semester_number'],
            },
        ),
        migrations.CreateModel(
            name='StudentGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mid_term_marks', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the marks obtained in mid-term examination', max_digits=5, null=True)),
                ('final_term_marks', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the marks obtained in final examination', max_digits=5, null=True)),
                ('assignment_marks', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the total marks obtained in assignments', max_digits=5, null=True)),
                ('quiz_marks', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the total marks obtained in quizzes', max_digits=5, null=True)),
                ('total_marks', models.DecimalField(decimal_places=2, help_text='Total marks obtained in the course (automatically calculated)', max_digits=5)),
                ('remarks', models.TextField(blank=True, help_text='Any additional remarks or comments about the grade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Student Grade',
                'verbose_name_plural': 'Student Grades',
            },
        ),
    ]
