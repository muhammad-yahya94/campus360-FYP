# Generated by Django 5.2 on 2025-05-25 05:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('admissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='Semester number in the program sequence')),
                ('name', models.CharField(help_text="Name of the semester (e.g., 'semester 1', 'semester 2')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of what this semester covers')),
                ('start_time', models.DateField(blank=True, help_text='Start date of the semester', null=True)),
                ('end_time', models.DateField(blank=True, help_text='End date of the semester', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this semester is currently active')),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
                'ordering': ['program', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Enter the unique course code (e.g., CS101).', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Enter the full name of the course (e.g., Introduction to Programming).', max_length=200)),
                ('credits', models.PositiveIntegerField(help_text='Enter the number of credit hours for this course.')),
                ('is_active', models.BooleanField(default=True, help_text='Check this if the course is currently active and can be offered.')),
                ('description', models.TextField(blank=True, help_text='Provide a brief description or syllabus summary for the course.')),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Select any courses that are required to be completed before taking this course (optional).', related_name='required_for', to='courses.course')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Check if this course offering is currently active for enrollment.')),
                ('max_capacity', models.PositiveIntegerField(default=30, help_text='Maximum number of students that can enroll in this offering.')),
                ('current_enrollment', models.PositiveIntegerField(default=0, help_text='Current number of enrolled students.')),
                ('offering_type', models.CharField(choices=[('core', 'Core / Compulsory'), ('major', 'Major'), ('minor', 'Minor'), ('elective', 'Elective'), ('foundation', 'Foundation'), ('gen_ed', 'General Education'), ('lab', 'Lab / Practical'), ('seminar', 'Seminar'), ('capstone', 'Capstone / Final Project'), ('internship', 'Internship / Training'), ('service', 'Service Course'), ('remedial', 'Remedial / Non-Credit')], default='core', help_text='Specify how this course offering fits into a program.', max_length=30)),
                ('academic_session', models.ForeignKey(help_text='Select the academic session for this offering.', on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='admissions.academicsession')),
                ('course', models.ForeignKey(help_text='Select the core course being offered.', on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='courses.course')),
                ('department', models.ForeignKey(blank=True, help_text='Select the department offering this course (optional).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='academics.department')),
                ('program', models.ForeignKey(blank=True, help_text='Select the program this course offering belongs to (optional).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='academics.program')),
            ],
            options={
                'verbose_name': 'Course Offering',
                'verbose_name_plural': 'Course Offerings',
            },
        ),
    ]
