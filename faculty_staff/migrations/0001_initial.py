# Generated by Django 5.2 on 2025-05-21 11:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the administrative office (e.g., Registrar Office).', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Provide a brief description of the office and its functions.', null=True)),
                ('image', models.ImageField(blank=True, help_text='Upload an image representing the office.', null=True, upload_to='offices/')),
                ('location', models.CharField(blank=True, help_text='Enter the physical location or building of the office.', max_length=200, null=True)),
                ('contact_email', models.EmailField(blank=True, help_text='Enter the official email address for the office.', max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, help_text='Enter the official phone number for the office.', max_length=20, null=True)),
                ('slug', models.SlugField(help_text='A unique identifier for the office page URL. Automatically generated if left blank.', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
            },
        ),
        migrations.CreateModel(
            name='OfficeStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(help_text='Enter the position or role of the staff member within the office.', max_length=100)),
                ('contact_no', models.CharField(blank=True, help_text='Enter the contact phone number for the office staff member (optional).', max_length=15, null=True)),
                ('office', models.ForeignKey(help_text='Select the office this staff member belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='faculty_staff.office')),
                ('user', models.OneToOneField(help_text='Select the user account associated with this staff member.', on_delete=django.db.models.deletion.CASCADE, related_name='officestaff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Office Staff',
                'verbose_name_plural': 'Office Staff',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('head_of_department', 'Head of Department'), ('professor', 'Professor')], help_text='Select the official designation or role of the teacher within the department.', max_length=100)),
                ('contact_no', models.CharField(help_text='Enter the primary contact phone number for the teacher.', max_length=15)),
                ('qualification', models.TextField(help_text='Enter the highest academic qualification of the teacher (e.g., PhD in Computer Science).')),
                ('hire_date', models.DateField(help_text='Select the date when the teacher was hired.')),
                ('is_active', models.BooleanField(default=True, help_text="Check this if the teacher's profile is currently active.")),
                ('linkedin_url', models.URLField(blank=True, help_text='Enter the LinkedIn profile URL for the teacher (optional).', null=True)),
                ('twitter_url', models.URLField(blank=True, help_text='Enter the Twitter profile URL for the teacher (optional).', null=True)),
                ('personal_website', models.URLField(blank=True, help_text='Enter the personal website URL for the teacher (optional).', null=True)),
                ('experience', models.TextField(blank=True, help_text="Provide a summary of the teacher's professional experience.", null=True)),
                ('department', models.ForeignKey(help_text='Select the department this teacher belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='academics.department')),
                ('user', models.OneToOneField(help_text='Select the user account associated with this teacher.', on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
    ]
