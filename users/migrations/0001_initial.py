# Generated by Django 5.2 on 2025-05-21 11:53

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(help_text="Required. Enter the user's unique email address.", max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, help_text="Enter the user's first name.", max_length=30)),
                ('last_name', models.CharField(blank=True, help_text="Enter the user's last name.", max_length=30)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time the user account was created.')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time the user last logged in.')),
                ('info', models.TextField(blank=True, help_text='Provide a brief bio or any relevant additional information about the user.', max_length=400, null=True)),
                ('profile_picture', models.ImageField(blank=True, help_text='Upload a profile picture for the user.', null=True, upload_to='profile_pictures/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
